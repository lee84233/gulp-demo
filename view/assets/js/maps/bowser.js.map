{"version":3,"sources":["bowser.js"],"names":["root","name","definition","module","exports","define","amd","this","detect","ua","getFirstMatch","regex","match","length","result","iosdevice","toLowerCase","android","test","nexusMobile","nexusTablet","chromeos","silk","sailfish","tizen","webos","windowsphone","windows","mac","linux","edgeVersion","versionIdentifier","tablet","mobile","xbox","opera","t","version","samsungBrowser","coast","yandexbrowser","ucbrowser","maxthon","epiphany","puffin","sleipnir","kMeleon","msedge","msie","chromeBook","chrome","vivaldi","seamonkey","firefox","firefoxos","phantom","slimer","blackberry","touchpad","bada","qupzilla","chromium","safari","googlebot","getSecondMatch","blink","webkit","gecko","ios","osVersion","replace","osversion","osMajorVersion","split","a","c","x","getVersionPrecision","map","arr","iterator","i","Array","prototype","call","push","compareVersions","versions","precision","Math","max","chunks","delta","join","chunk","reverse","isUnsupportedBrowser","minVersions","strictMode","_bowser","bowser","browser","hasOwnProperty","Error","String","navigator","userAgent","browserList","browserItem","check","_detect"],"mappings":"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","file":"../bowser.js","sourcesContent":["/*!\r\n * Bowser - a browser detector\r\n * https://github.com/ded/bowser\r\n * MIT License | (c) Dustin Diaz 2015\r\n */\r\n\r\n!function (root, name, definition) {\r\n  if (typeof module != 'undefined' && module.exports) module.exports = definition()\r\n  else if (typeof define == 'function' && define.amd) define(name, definition)\r\n  else root[name] = definition()\r\n}(this, 'bowser', function () {\r\n  /**\r\n    * See useragents.js for examples of navigator.userAgent\r\n    */\r\n\r\n  var t = true\r\n\r\n  function detect(ua) {\r\n\r\n    function getFirstMatch(regex) {\r\n      var match = ua.match(regex);\r\n      return (match && match.length > 1 && match[1]) || '';\r\n    }\r\n\r\n    function getSecondMatch(regex) {\r\n      var match = ua.match(regex);\r\n      return (match && match.length > 1 && match[2]) || '';\r\n    }\r\n\r\n    var iosdevice = getFirstMatch(/(ipod|iphone|ipad)/i).toLowerCase()\r\n      , likeAndroid = /like android/i.test(ua)\r\n      , android = !likeAndroid && /android/i.test(ua)\r\n      , nexusMobile = /nexus\\s*[0-6]\\s*/i.test(ua)\r\n      , nexusTablet = !nexusMobile && /nexus\\s*[0-9]+/i.test(ua)\r\n      , chromeos = /CrOS/.test(ua)\r\n      , silk = /silk/i.test(ua)\r\n      , sailfish = /sailfish/i.test(ua)\r\n      , tizen = /tizen/i.test(ua)\r\n      , webos = /(web|hpw)os/i.test(ua)\r\n      , windowsphone = /windows phone/i.test(ua)\r\n      , samsungBrowser = /SamsungBrowser/i.test(ua)\r\n      , windows = !windowsphone && /windows/i.test(ua)\r\n      , mac = !iosdevice && !silk && /macintosh/i.test(ua)\r\n      , linux = !android && !sailfish && !tizen && !webos && /linux/i.test(ua)\r\n      , edgeVersion = getFirstMatch(/edge\\/(\\d+(\\.\\d+)?)/i)\r\n      , versionIdentifier = getFirstMatch(/version\\/(\\d+(\\.\\d+)?)/i)\r\n      , tablet = /tablet/i.test(ua)\r\n      , mobile = !tablet && /[^-]mobi/i.test(ua)\r\n      , xbox = /xbox/i.test(ua)\r\n      , result\r\n\r\n    if (/opera/i.test(ua)) {\r\n      //  an old Opera\r\n      result = {\r\n        name: 'Opera'\r\n      , opera: t\r\n      , version: versionIdentifier || getFirstMatch(/(?:opera|opr|opios)[\\s\\/](\\d+(\\.\\d+)?)/i)\r\n      }\r\n    } else if (/opr|opios/i.test(ua)) {\r\n      // a new Opera\r\n      result = {\r\n        name: 'Opera'\r\n        , opera: t\r\n        , version: getFirstMatch(/(?:opr|opios)[\\s\\/](\\d+(\\.\\d+)?)/i) || versionIdentifier\r\n      }\r\n    }\r\n    else if (/SamsungBrowser/i.test(ua)) {\r\n      result = {\r\n        name: 'Samsung Internet for Android'\r\n        , samsungBrowser: t\r\n        , version: versionIdentifier || getFirstMatch(/(?:SamsungBrowser)[\\s\\/](\\d+(\\.\\d+)?)/i)\r\n      }\r\n    }\r\n    else if (/coast/i.test(ua)) {\r\n      result = {\r\n        name: 'Opera Coast'\r\n        , coast: t\r\n        , version: versionIdentifier || getFirstMatch(/(?:coast)[\\s\\/](\\d+(\\.\\d+)?)/i)\r\n      }\r\n    }\r\n    else if (/yabrowser/i.test(ua)) {\r\n      result = {\r\n        name: 'Yandex Browser'\r\n      , yandexbrowser: t\r\n      , version: versionIdentifier || getFirstMatch(/(?:yabrowser)[\\s\\/](\\d+(\\.\\d+)?)/i)\r\n      }\r\n    }\r\n    else if (/ucbrowser/i.test(ua)) {\r\n      result = {\r\n          name: 'UC Browser'\r\n        , ucbrowser: t\r\n        , version: getFirstMatch(/(?:ucbrowser)[\\s\\/](\\d+(?:\\.\\d+)+)/i)\r\n      }\r\n    }\r\n    else if (/mxios/i.test(ua)) {\r\n      result = {\r\n        name: 'Maxthon'\r\n        , maxthon: t\r\n        , version: getFirstMatch(/(?:mxios)[\\s\\/](\\d+(?:\\.\\d+)+)/i)\r\n      }\r\n    }\r\n    else if (/epiphany/i.test(ua)) {\r\n      result = {\r\n        name: 'Epiphany'\r\n        , epiphany: t\r\n        , version: getFirstMatch(/(?:epiphany)[\\s\\/](\\d+(?:\\.\\d+)+)/i)\r\n      }\r\n    }\r\n    else if (/puffin/i.test(ua)) {\r\n      result = {\r\n        name: 'Puffin'\r\n        , puffin: t\r\n        , version: getFirstMatch(/(?:puffin)[\\s\\/](\\d+(?:\\.\\d+)?)/i)\r\n      }\r\n    }\r\n    else if (/sleipnir/i.test(ua)) {\r\n      result = {\r\n        name: 'Sleipnir'\r\n        , sleipnir: t\r\n        , version: getFirstMatch(/(?:sleipnir)[\\s\\/](\\d+(?:\\.\\d+)+)/i)\r\n      }\r\n    }\r\n    else if (/k-meleon/i.test(ua)) {\r\n      result = {\r\n        name: 'K-Meleon'\r\n        , kMeleon: t\r\n        , version: getFirstMatch(/(?:k-meleon)[\\s\\/](\\d+(?:\\.\\d+)+)/i)\r\n      }\r\n    }\r\n    else if (windowsphone) {\r\n      result = {\r\n        name: 'Windows Phone'\r\n      , windowsphone: t\r\n      }\r\n      if (edgeVersion) {\r\n        result.msedge = t\r\n        result.version = edgeVersion\r\n      }\r\n      else {\r\n        result.msie = t\r\n        result.version = getFirstMatch(/iemobile\\/(\\d+(\\.\\d+)?)/i)\r\n      }\r\n    }\r\n    else if (/msie|trident/i.test(ua)) {\r\n      result = {\r\n        name: 'Internet Explorer'\r\n      , msie: t\r\n      , version: getFirstMatch(/(?:msie |rv:)(\\d+(\\.\\d+)?)/i)\r\n      }\r\n    } else if (chromeos) {\r\n      result = {\r\n        name: 'Chrome'\r\n      , chromeos: t\r\n      , chromeBook: t\r\n      , chrome: t\r\n      , version: getFirstMatch(/(?:chrome|crios|crmo)\\/(\\d+(\\.\\d+)?)/i)\r\n      }\r\n    } else if (/chrome.+? edge/i.test(ua)) {\r\n      result = {\r\n        name: 'Microsoft Edge'\r\n      , msedge: t\r\n      , version: edgeVersion\r\n      }\r\n    }\r\n    else if (/vivaldi/i.test(ua)) {\r\n      result = {\r\n        name: 'Vivaldi'\r\n        , vivaldi: t\r\n        , version: getFirstMatch(/vivaldi\\/(\\d+(\\.\\d+)?)/i) || versionIdentifier\r\n      }\r\n    }\r\n    else if (sailfish) {\r\n      result = {\r\n        name: 'Sailfish'\r\n      , sailfish: t\r\n      , version: getFirstMatch(/sailfish\\s?browser\\/(\\d+(\\.\\d+)?)/i)\r\n      }\r\n    }\r\n    else if (/seamonkey\\//i.test(ua)) {\r\n      result = {\r\n        name: 'SeaMonkey'\r\n      , seamonkey: t\r\n      , version: getFirstMatch(/seamonkey\\/(\\d+(\\.\\d+)?)/i)\r\n      }\r\n    }\r\n    else if (/firefox|iceweasel|fxios/i.test(ua)) {\r\n      result = {\r\n        name: 'Firefox'\r\n      , firefox: t\r\n      , version: getFirstMatch(/(?:firefox|iceweasel|fxios)[ \\/](\\d+(\\.\\d+)?)/i)\r\n      }\r\n      if (/\\((mobile|tablet);[^\\)]*rv:[\\d\\.]+\\)/i.test(ua)) {\r\n        result.firefoxos = t\r\n      }\r\n    }\r\n    else if (silk) {\r\n      result =  {\r\n        name: 'Amazon Silk'\r\n      , silk: t\r\n      , version : getFirstMatch(/silk\\/(\\d+(\\.\\d+)?)/i)\r\n      }\r\n    }\r\n    else if (/phantom/i.test(ua)) {\r\n      result = {\r\n        name: 'PhantomJS'\r\n      , phantom: t\r\n      , version: getFirstMatch(/phantomjs\\/(\\d+(\\.\\d+)?)/i)\r\n      }\r\n    }\r\n    else if (/slimerjs/i.test(ua)) {\r\n      result = {\r\n        name: 'SlimerJS'\r\n        , slimer: t\r\n        , version: getFirstMatch(/slimerjs\\/(\\d+(\\.\\d+)?)/i)\r\n      }\r\n    }\r\n    else if (/blackberry|\\bbb\\d+/i.test(ua) || /rim\\stablet/i.test(ua)) {\r\n      result = {\r\n        name: 'BlackBerry'\r\n      , blackberry: t\r\n      , version: versionIdentifier || getFirstMatch(/blackberry[\\d]+\\/(\\d+(\\.\\d+)?)/i)\r\n      }\r\n    }\r\n    else if (webos) {\r\n      result = {\r\n        name: 'WebOS'\r\n      , webos: t\r\n      , version: versionIdentifier || getFirstMatch(/w(?:eb)?osbrowser\\/(\\d+(\\.\\d+)?)/i)\r\n      };\r\n      /touchpad\\//i.test(ua) && (result.touchpad = t)\r\n    }\r\n    else if (/bada/i.test(ua)) {\r\n      result = {\r\n        name: 'Bada'\r\n      , bada: t\r\n      , version: getFirstMatch(/dolfin\\/(\\d+(\\.\\d+)?)/i)\r\n      };\r\n    }\r\n    else if (tizen) {\r\n      result = {\r\n        name: 'Tizen'\r\n      , tizen: t\r\n      , version: getFirstMatch(/(?:tizen\\s?)?browser\\/(\\d+(\\.\\d+)?)/i) || versionIdentifier\r\n      };\r\n    }\r\n    else if (/qupzilla/i.test(ua)) {\r\n      result = {\r\n        name: 'QupZilla'\r\n        , qupzilla: t\r\n        , version: getFirstMatch(/(?:qupzilla)[\\s\\/](\\d+(?:\\.\\d+)+)/i) || versionIdentifier\r\n      }\r\n    }\r\n    else if (/chromium/i.test(ua)) {\r\n      result = {\r\n        name: 'Chromium'\r\n        , chromium: t\r\n        , version: getFirstMatch(/(?:chromium)[\\s\\/](\\d+(?:\\.\\d+)?)/i) || versionIdentifier\r\n      }\r\n    }\r\n    else if (/chrome|crios|crmo/i.test(ua)) {\r\n      result = {\r\n        name: 'Chrome'\r\n        , chrome: t\r\n        , version: getFirstMatch(/(?:chrome|crios|crmo)\\/(\\d+(\\.\\d+)?)/i)\r\n      }\r\n    }\r\n    else if (android) {\r\n      result = {\r\n        name: 'Android'\r\n        , version: versionIdentifier\r\n      }\r\n    }\r\n    else if (/safari|applewebkit/i.test(ua)) {\r\n      result = {\r\n        name: 'Safari'\r\n      , safari: t\r\n      }\r\n      if (versionIdentifier) {\r\n        result.version = versionIdentifier\r\n      }\r\n    }\r\n    else if (iosdevice) {\r\n      result = {\r\n        name : iosdevice == 'iphone' ? 'iPhone' : iosdevice == 'ipad' ? 'iPad' : 'iPod'\r\n      }\r\n      // WTF: version is not part of user agent in web apps\r\n      if (versionIdentifier) {\r\n        result.version = versionIdentifier\r\n      }\r\n    }\r\n    else if(/googlebot/i.test(ua)) {\r\n      result = {\r\n        name: 'Googlebot'\r\n      , googlebot: t\r\n      , version: getFirstMatch(/googlebot\\/(\\d+(\\.\\d+))/i) || versionIdentifier\r\n      }\r\n    }\r\n    else {\r\n      result = {\r\n        name: getFirstMatch(/^(.*)\\/(.*) /),\r\n        version: getSecondMatch(/^(.*)\\/(.*) /)\r\n     };\r\n   }\r\n\r\n    // set webkit or gecko flag for browsers based on these engines\r\n    if (!result.msedge && /(apple)?webkit/i.test(ua)) {\r\n      if (/(apple)?webkit\\/537\\.36/i.test(ua)) {\r\n        result.name = result.name || \"Blink\"\r\n        result.blink = t\r\n      } else {\r\n        result.name = result.name || \"Webkit\"\r\n        result.webkit = t\r\n      }\r\n      if (!result.version && versionIdentifier) {\r\n        result.version = versionIdentifier\r\n      }\r\n    } else if (!result.opera && /gecko\\//i.test(ua)) {\r\n      result.name = result.name || \"Gecko\"\r\n      result.gecko = t\r\n      result.version = result.version || getFirstMatch(/gecko\\/(\\d+(\\.\\d+)?)/i)\r\n    }\r\n\r\n    // set OS flags for platforms that have multiple browsers\r\n    if (!result.windowsphone && !result.msedge && (android || result.silk)) {\r\n      result.android = t\r\n    } else if (!result.windowsphone && !result.msedge && iosdevice) {\r\n      result[iosdevice] = t\r\n      result.ios = t\r\n    } else if (mac) {\r\n      result.mac = t\r\n    } else if (xbox) {\r\n      result.xbox = t\r\n    } else if (windows) {\r\n      result.windows = t\r\n    } else if (linux) {\r\n      result.linux = t\r\n    }\r\n\r\n    // OS version extraction\r\n    var osVersion = '';\r\n    if (result.windowsphone) {\r\n      osVersion = getFirstMatch(/windows phone (?:os)?\\s?(\\d+(\\.\\d+)*)/i);\r\n    } else if (iosdevice) {\r\n      osVersion = getFirstMatch(/os (\\d+([_\\s]\\d+)*) like mac os x/i);\r\n      osVersion = osVersion.replace(/[_\\s]/g, '.');\r\n    } else if (android) {\r\n      osVersion = getFirstMatch(/android[ \\/-](\\d+(\\.\\d+)*)/i);\r\n    } else if (result.webos) {\r\n      osVersion = getFirstMatch(/(?:web|hpw)os\\/(\\d+(\\.\\d+)*)/i);\r\n    } else if (result.blackberry) {\r\n      osVersion = getFirstMatch(/rim\\stablet\\sos\\s(\\d+(\\.\\d+)*)/i);\r\n    } else if (result.bada) {\r\n      osVersion = getFirstMatch(/bada\\/(\\d+(\\.\\d+)*)/i);\r\n    } else if (result.tizen) {\r\n      osVersion = getFirstMatch(/tizen[\\/\\s](\\d+(\\.\\d+)*)/i);\r\n    }\r\n    if (osVersion) {\r\n      result.osversion = osVersion;\r\n    }\r\n\r\n    // device type extraction\r\n    var osMajorVersion = osVersion.split('.')[0];\r\n    if (\r\n         tablet\r\n      || nexusTablet\r\n      || iosdevice == 'ipad'\r\n      || (android && (osMajorVersion == 3 || (osMajorVersion >= 4 && !mobile)))\r\n      || result.silk\r\n    ) {\r\n      result.tablet = t\r\n    } else if (\r\n         mobile\r\n      || iosdevice == 'iphone'\r\n      || iosdevice == 'ipod'\r\n      || android\r\n      || nexusMobile\r\n      || result.blackberry\r\n      || result.webos\r\n      || result.bada\r\n    ) {\r\n      result.mobile = t\r\n    }\r\n\r\n    // Graded Browser Support\r\n    // http://developer.yahoo.com/yui/articles/gbs\r\n    if (result.msedge ||\r\n        (result.msie && result.version >= 10) ||\r\n        (result.yandexbrowser && result.version >= 15) ||\r\n\t\t    (result.vivaldi && result.version >= 1.0) ||\r\n        (result.chrome && result.version >= 20) ||\r\n        (result.samsungBrowser && result.version >= 4) ||\r\n        (result.firefox && result.version >= 20.0) ||\r\n        (result.safari && result.version >= 6) ||\r\n        (result.opera && result.version >= 10.0) ||\r\n        (result.ios && result.osversion && result.osversion.split(\".\")[0] >= 6) ||\r\n        (result.blackberry && result.version >= 10.1)\r\n        || (result.chromium && result.version >= 20)\r\n        ) {\r\n      result.a = t;\r\n    }\r\n    else if ((result.msie && result.version < 10) ||\r\n        (result.chrome && result.version < 20) ||\r\n        (result.firefox && result.version < 20.0) ||\r\n        (result.safari && result.version < 6) ||\r\n        (result.opera && result.version < 10.0) ||\r\n        (result.ios && result.osversion && result.osversion.split(\".\")[0] < 6)\r\n        || (result.chromium && result.version < 20)\r\n        ) {\r\n      result.c = t\r\n    } else result.x = t\r\n\r\n    return result\r\n  }\r\n\r\n  var bowser = detect(typeof navigator !== 'undefined' ? navigator.userAgent || '' : '')\r\n\r\n  bowser.test = function (browserList) {\r\n    for (var i = 0; i < browserList.length; ++i) {\r\n      var browserItem = browserList[i];\r\n      if (typeof browserItem=== 'string') {\r\n        if (browserItem in bowser) {\r\n          return true;\r\n        }\r\n      }\r\n    }\r\n    return false;\r\n  }\r\n\r\n  /**\r\n   * Get version precisions count\r\n   *\r\n   * @example\r\n   *   getVersionPrecision(\"1.10.3\") // 3\r\n   *\r\n   * @param  {string} version\r\n   * @return {number}\r\n   */\r\n  function getVersionPrecision(version) {\r\n    return version.split(\".\").length;\r\n  }\r\n\r\n  /**\r\n   * Array::map polyfill\r\n   *\r\n   * @param  {Array} arr\r\n   * @param  {Function} iterator\r\n   * @return {Array}\r\n   */\r\n  function map(arr, iterator) {\r\n    var result = [], i;\r\n    if (Array.prototype.map) {\r\n      return Array.prototype.map.call(arr, iterator);\r\n    }\r\n    for (i = 0; i < arr.length; i++) {\r\n      result.push(iterator(arr[i]));\r\n    }\r\n    return result;\r\n  }\r\n\r\n  /**\r\n   * Calculate browser version weight\r\n   *\r\n   * @example\r\n   *   compareVersions(['1.10.2.1',  '1.8.2.1.90'])    // 1\r\n   *   compareVersions(['1.010.2.1', '1.09.2.1.90']);  // 1\r\n   *   compareVersions(['1.10.2.1',  '1.10.2.1']);     // 0\r\n   *   compareVersions(['1.10.2.1',  '1.0800.2']);     // -1\r\n   *\r\n   * @param  {Array<String>} versions versions to compare\r\n   * @return {Number} comparison result\r\n   */\r\n  function compareVersions(versions) {\r\n    // 1) get common precision for both versions, for example for \"10.0\" and \"9\" it should be 2\r\n    var precision = Math.max(getVersionPrecision(versions[0]), getVersionPrecision(versions[1]));\r\n    var chunks = map(versions, function (version) {\r\n      var delta = precision - getVersionPrecision(version);\r\n\r\n      // 2) \"9\" -> \"9.0\" (for precision = 2)\r\n      version = version + new Array(delta + 1).join(\".0\");\r\n\r\n      // 3) \"9.0\" -> [\"000000000\"\", \"000000009\"]\r\n      return map(version.split(\".\"), function (chunk) {\r\n        return new Array(20 - chunk.length).join(\"0\") + chunk;\r\n      }).reverse();\r\n    });\r\n\r\n    // iterate in reverse order by reversed chunks array\r\n    while (--precision >= 0) {\r\n      // 4) compare: \"000000009\" > \"000000010\" = false (but \"9\" > \"10\" = true)\r\n      if (chunks[0][precision] > chunks[1][precision]) {\r\n        return 1;\r\n      }\r\n      else if (chunks[0][precision] === chunks[1][precision]) {\r\n        if (precision === 0) {\r\n          // all version chunks are same\r\n          return 0;\r\n        }\r\n      }\r\n      else {\r\n        return -1;\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Check if browser is unsupported\r\n   *\r\n   * @example\r\n   *   bowser.isUnsupportedBrowser({\r\n   *     msie: \"10\",\r\n   *     firefox: \"23\",\r\n   *     chrome: \"29\",\r\n   *     safari: \"5.1\",\r\n   *     opera: \"16\",\r\n   *     phantom: \"534\"\r\n   *   });\r\n   *\r\n   * @param  {Object}  minVersions map of minimal version to browser\r\n   * @param  {Boolean} [strictMode = false] flag to return false if browser wasn't found in map\r\n   * @param  {String}  [ua] user agent string\r\n   * @return {Boolean}\r\n   */\r\n  function isUnsupportedBrowser(minVersions, strictMode, ua) {\r\n    var _bowser = bowser;\r\n\r\n    // make strictMode param optional with ua param usage\r\n    if (typeof strictMode === 'string') {\r\n      ua = strictMode;\r\n      strictMode = void(0);\r\n    }\r\n\r\n    if (strictMode === void(0)) {\r\n      strictMode = false;\r\n    }\r\n    if (ua) {\r\n      _bowser = detect(ua);\r\n    }\r\n\r\n    var version = \"\" + _bowser.version;\r\n    for (var browser in minVersions) {\r\n      if (minVersions.hasOwnProperty(browser)) {\r\n        if (_bowser[browser]) {\r\n          if (typeof minVersions[browser] !== 'string') {\r\n            throw new Error('Browser version in the minVersion map should be a string: ' + browser + ': ' + String(minVersions));\r\n          }\r\n\r\n          // browser version and min supported version.\r\n          return compareVersions([version, minVersions[browser]]) < 0;\r\n        }\r\n      }\r\n    }\r\n\r\n    return strictMode; // not found\r\n  }\r\n\r\n  /**\r\n   * Check if browser is supported\r\n   *\r\n   * @param  {Object} minVersions map of minimal version to browser\r\n   * @param  {Boolean} [strictMode = false] flag to return false if browser wasn't found in map\r\n   * @param  {String}  [ua] user agent string\r\n   * @return {Boolean}\r\n   */\r\n  function check(minVersions, strictMode, ua) {\r\n    return !isUnsupportedBrowser(minVersions, strictMode, ua);\r\n  }\r\n\r\n  bowser.isUnsupportedBrowser = isUnsupportedBrowser;\r\n  bowser.compareVersions = compareVersions;\r\n  bowser.check = check;\r\n\r\n  /*\r\n   * Set our detect method to the main bowser object so we can\r\n   * reuse it to test other user agents.\r\n   * This is needed to implement future tests.\r\n   */\r\n  bowser._detect = detect;\r\n\r\n  return bowser\r\n});"]}